#!/bin/bash
set -euo pipefail

BUILD_DIR=$1
CACHE_DIR=$2
export BUILDPACK_DIR=`dirname $(readlink -f ${BASH_SOURCE%/*})`

if [ -f $BUILD_DIR/stratos-debug ]; then
  ${BUILDPACK_DIR}/bin/debug $1 $2
fi

#export DEPS_DIR="$BUILD_DIR/.cloudfoundry"
#mkdir -p "$DEPS_DIR/0"
#mkdir -p "$BUILD_DIR/.profile.d"
#echo "export DEPS_DIR=\$HOME/.cloudfoundry" > "$BUILD_DIR/.profile.d/0000_set-deps-dir.sh"

echo "Stratos UI Buildpack"
echo "-----> Stack ${CF_STACK}"

# Install go
source "$BUILDPACK_DIR/scripts/install_go.sh"

# Install glide
source "$BUILDPACK_DIR/scripts/install_glide.sh"

# Install nodejs
source "$BUILDPACK_DIR/scripts/install_nodejs.sh"

export PATH=$NodeDir/bin:$GoInstallDir/go/bin:$GlideDir:$PATH

echo "-----> Checking versions"
echo "---------> Node Version: `node --version`"
echo "---------> NPM Version: `npm --version`"
echo "---------> Go Version: `go version`"
echo "---------> Glide Version: `glide -v`"

# Store the node_modules in the cache folder via a symlink
if [ ! -d "$CACHE_DIR" ]; then
  echo "Cache directory [$CACHE_DIR] does not exist"
  mkdir -p "$CACHE_DIR"
else
  echo "Cache directory [$CACHE_DIR] exists"
fi

if [ ! -d "$CACHE_DIR/node_modules" ]; then
  mkdir -p "$CACHE_DIR/node_modules"
fi

if [ ! -d "$CACHE_DIR/bower_components" ]; then
  mkdir -p "$CACHE_DIR/bower_components"
fi

# node_modules is a symbolic link
ln -s $CACHE_DIR/node_modules $BUILD_DIR/node_modules
# bower_components is a symbolic link
ln -s $CACHE_DIR/bower_components $BUILD_DIR/bower_components

echo "-----> Running stratos build compile"

# Build the console
time $BUILD_DIR/deploy/cloud-foundry/build.sh

echo "-----> Stratos UI build complete"
